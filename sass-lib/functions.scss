
/* Function "clear_h_p_padding_margin"
 * clear all padding, margin values for hx tages and p tag
 */
 @mixin clear_h_p_padding_margin {
    h1,h2,h3,h4,h5,h6, p{
        padding: 0;
        margin: 0;
    }
}

/* Function "absFull"
 * position absolute and then full size
 */
@mixin absFull {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    transform: none;
}

/* Function 
 * "absLeftTop"     "absCenterTop"      "absRightTop"
 * "absLeftCenter"  "absCenterCenter"   "absRightCenter"
 * "absLeftBottom"  "absCenterBottom"   "absRightBottom"
 * position absolute and then set the position
 */

/* absLeftTop
    +--
    ---
    ---
 */
@mixin absLeftTop ($l: 0, $t: 0) {
    position: absolute;
    left: $l;
    right: auto;
    top: $t;
    bottom: auto;
    transform: none;
}
/* absCenterTop
    -+-
    ---
    ---
 */
@mixin absCenterTop($t: 0) {
    position: absolute;
    left: 50%;
    right: auto;
    top: $t;
    bottom: auto;
    transform: translate(-50%, 0);
}
/* absRightTop
    --+
    ---
    ---
 */
@mixin absRightTop ($r: 0, $t: 0) {
    position: absolute;
    left: auto;
    right: $r;
    top: $t;
    bottom: auto;
    transform: none;
}
/* absLeftCenter
    ---
    +--
    ---
 */
@mixin absLeftCenter($l: 0) {
    position: absolute;
    left: $l;
    right: auto;
    top: 50%;
    bottom: auto;
    transform: translate(0, -50%);
}
/* absCenterCenter
    ---
    -+-
    ---
 */
@mixin absCenterCenter {
    position: absolute;
    left: 50%;
    right: auto;
    top: 50%;
    bottom: auto;
    transform: translate(-50%, -50%);
}
/* absRightCenter
    ---
    --+
    ---
 */
@mixin absRightCenter($r: 0) {
    position: absolute;
    left: auto;
    right: $r;
    top: 50%;
    bottom: auto;
    transform: translate(0, -50%);
}
/* absLeftBottom
    ---
    ---
    +--
 */
@mixin absLeftBottom ($l: 0, $b: 0){
    position: absolute;
    left: $l;
    right: auto;
    top: auto;
    bottom: $b;
    transform: none;
}
/* absCenterBottom
    ---
    ---
    -+-
 */
@mixin absCenterBottom ($b: 0) {
    position: absolute;
    left: 50%;
    right: auto;
    top: auto;
    bottom: $b;
    transform: translate(-50%, 0);
}
/* absRightBottom
    ---
    ---
    --+
 */
@mixin absRightBottom ($r: 0, $b: 0) {
    position: absolute;
    left: auto;
    right: $r;
    top: auto;
    bottom: $b;
    transform: none;
}

@mixin absClear ($p: relative, $l: auto, $r: auto, $t: auto, $b: auto, $trans: none) {
    position: $p;
    left: $l;
    right: $r;
    top: $t;
    bottom: $b;
    transform: $trans;
}

/* Function "transHoverCBg" "transHover"
 * set transition value
 */
 @mixin trans ($attr, $transTime: 150ms) {
    transition: $attr $transTime ease-in;
}

/* Function "userSelect"
 * set user-select value
 */
@mixin userSelect($v) {
    -webkit-user-select: none; /* Safari 3.1+ */
    -moz-user-select: none; /* Firefox 2+ */
    -ms-user-select: none; /* IE 10+ */
    user-select: none; /* Standard syntax */
}

/* Function "aTag"
 * set a tag
 */
@mixin aTag($color, $hover_color, $txtDeco: none, $class: null) {
    
    @if $class == null {
        a {
            color: $color;
            &:hover {
                color: $hover_color;
                text-decoration: $txtDeco;
            }
        }
    } @else {
        a.#{$class} {
            color: $color;
            &:hover {
                color: $hover_color;
                text-decoration: $txtDeco;
            }
        }
    }

}
